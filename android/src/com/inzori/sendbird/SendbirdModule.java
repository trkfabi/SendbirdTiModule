/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.inzori.sendbird;



import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.util.TiConvert;

import android.app.Application;
import android.app.Activity;
import android.content.Intent;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import android.content.Context;

import com.sendbird.uikit.SendbirdUIKit;
import com.sendbird.uikit.adapter.SendbirdUIKitAdapter;
import com.sendbird.uikit.activities.ChannelListActivity;
import com.sendbird.uikit.interfaces.UserInfo;
import com.sendbird.android.handler.InitResultHandler;
import com.sendbird.android.exception.SendbirdException;


@Kroll.module(name="Sendbird", id="com.inzori.sendbird")
public class SendbirdModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "SendbirdModule";
	private String appId = "";
	private String userId = "";
	private String userName = "";
	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public SendbirdModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public void initSendbird(KrollDict args)
	{
		Log.d(LCAT, "initSendbird called");

		if(args.containsKey("appId")){
			appId = args.getString("appId");
		} else return;
		if (args.containsKey("userId")) {
			userId = args.getString("userId");
		} else return;
		if(args.containsKey("userName")){
			userName = args.getString("userName");
		} else return;

		SendbirdUIKit.init(new SendbirdUIKitAdapter() {
            @NonNull
            @Override
            public String getAppId() {
                return appId;  // Specify your Sendbird application ID.
            }

            @Nullable
            @Override
            public String getAccessToken() {
                return "";
            }

            @NonNull
            @Override
            public UserInfo getUserInfo() {
                return new UserInfo() {
                    @Override
                    public String getUserId() {
                        return userId;  // Specify your user ID.
                    }

                    @Nullable
                    @Override
                    public String getNickname() {
                        return userName;  // Specify your user nickname.
                    }

                    @Nullable
                    @Override
                    public String getProfileUrl() {
                        return "";
                    }
                };
            }

            @NonNull
            @Override
            public InitResultHandler getInitResultHandler() {
				Log.d(LCAT, "getInitResultHandler method");
                return new InitResultHandler() {
                    @Override
                    public void onMigrationStarted() {
                        // DB migration has started.
						Log.d(LCAT, "onMigrationStarted method");
                    }

                    @Override
                    public void onInitFailed(SendbirdException e) {
                        // If DB migration fails, this method is called.
						Log.d(LCAT, "onInitFailed method");
						KrollDict eventData = new KrollDict();
						eventData.put("success",false);
						fireEvent("sendbird:status", eventData);
                    }

                    @Override
                    public void onInitSucceed() {
                        // If DB migration is successful, this method is called and you can proceed to the next step.
                        // In the sample app, the `LiveData` class notifies you on the initialization progress
                        // And observes the `MutableLiveData<InitState> initState` value in `SplashActivity()`.
                        // If successful, the `LoginActivity` screen
                        // Or the `HomeActivity` screen will show.
						Log.d(LCAT, "onInitSucceed method");
						KrollDict eventData = new KrollDict();
						eventData.put("success",true);
						fireEvent("sendbird:status", eventData);

						Intent intent = ChannelListActivity.newIntent(TiApplication.getInstance().getApplicationContext());
						intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
						TiApplication.getInstance().getApplicationContext().startActivity(intent);
                    }
                };
            }
        }, TiApplication.getInstance().getApplicationContext());		
	}

	// // Properties
	// @Kroll.getProperty
	// public String getExampleProp()
	// {
	// 	Log.d(LCAT, "get example property");
	// 	return "hello world";
	// }


	// @Kroll.setProperty
	// public void setExampleProp(String value) {
	// 	Log.d(LCAT, "set example property: " + value);
	// }

}

